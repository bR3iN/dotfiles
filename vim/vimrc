" Variables {{{
"if filereadable(expand("~/.dotfiles/vim/vimrc"))
	"let $MYVIMRC = "~/.vim/vimrc"
"endif
" }}}

" General Options {{{
set autoindent
set autoread
set backspace=indent,eol,start
set cmdheight=2
set confirm
set display=lastline
set hidden 
set history=10000
set hlsearch
set ignorecase
set incsearch
set laststatus=2 
set mouse=a
set nocompatible
set number relativenumber
set ruler
set scrolloff=1
set showcmd
set showcmd
set smartcase " requires ignorecase
set wildmenu
set wildmode=longest:full,full

" Wrap behaviour
set breakindent
set wrap

" Default tab behaviour
set shiftwidth=4
set tabstop=4

let mapleader = " "
let maplocalleader = " "

syntax on
filetype indent plugin on 
" }}}

" Navigation {{{
nnoremap <leader>ev :<c-u>split $MYVIMRC<cr>
nnoremap <leader>av :<c-u>split $MYVIMRC<cr>Go
nnoremap <leader>co :<c-u>copen<cr>/error<cr>
nnoremap <leader>cc :<c-u>cclose<cr>
nmap <F1> <nop>

"nnoremap <silent> h <C-w>h
"nnoremap <silent> j <C-w>j
"nnoremap <silent> k <C-w>k
"nnoremap <silent> l <C-w>l

nnoremap <silent> h :TmuxNavigateLeft<cr>
nnoremap <silent> j :TmuxNavigateDown<cr>
nnoremap <silent> k :TmuxNavigateUp<cr>
nnoremap <silent> l :TmuxNavigateRight<cr>

inoremap <silent> <C-l> <C-o>a
inoremap <silent> <C-h> <left>
" }}}

" NERDCommenter {{{
nmap <silent>  <Plug>NERDCommenterToggle
vmap <silent>  <Plug>NERDCommenterToggle
imap <silent>  <Esc>a
" }}}

" NERDTree {{{
nnoremap <silent> <C-t> :NERDTreeToggle<CR>
nnoremap <silent> <C-n> :NERDTreeFind<CR>
" }}}

" Load Plugins {{{
call plug#begin('~/.vim/plugged')

Plug 'neoclide/coc.nvim', {'branch': 'release'}

"Plug 'arcticicestudio/nord-vim'
"Plug 'joshdick/onedark.vim'

Plug 'christoomey/vim-tmux-navigator'
Plug 'lervag/vimtex'
"Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
"Plug 'junegunn/fzf.vim'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'preservim/nerdcommenter'
Plug 'preservim/nerdtree' |
			"\ Plug 'Xuyuanp/nerdtree-git-plugin' 
			"\ Plug 'ryanoasis/vim-devicons' |
			"\ Plug 'tiagofumo/vim-nerdtree-syntax-highlight'

call plug#end()
" }}}

source ~/.vim/coc.vim

" Tex {{{
augroup filetype_tex

	autocmd BufRead main.tex VimtexCompile	
	autocmd FileType tex nnoremap <leader>td <Esc>o%TODO: 
	autocmd FileType tex let b:surround_66 = "\\{\r\\}"
	autocmd FileType tex let b:surround_105 = "\\[\r\\]" " \[ \] on i
	autocmd FileType tex nmap <leader>pad f$%i<Enter><Esc>%a<Enter><Esc>k%ge
	autocmd FileType tex nmap <leader>Pad \padds$ySSi
	" autocmd Filetype tex set conceallevel=2
	autocmd FileType tex vmap <leader>em c\emph{"}
	autocmd FileType tex vmap <leader>op S}i\mathop
	autocmd FileType tex vmap <leader>it S}i\textit
	autocmd FileType tex nnoremap <leader>tt :VimtexTocToggle<CR>
augroup END
let g:vimtex_view_method = 'zathura'
"let g:tex_flavor='latex'
let g:vimtex_quickfix_mode = 0
"let g:tex_conceal='abdmg'
" }}}

" Misc Autocmd{{{
augroup vimrc
	autocmd!
	autocmd BufWritePost ~/.dotfiles/vim/* source $MYVIMRC
	autocmd FileType vim setlocal foldmethod=marker
	autocmd FileType tmux setlocal foldmethod=marker
	" Exit Vim if NERDTree is the only window left.
	autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() |
				\ quit | endif
augroup END
" }}}

" Mappings {{{
nnoremap Y y$
nnoremap <leader>w :<c-u>w<cr>
nnoremap <leader>qq :<c-u>q<cr>
nnoremap <leader>u ~h
nnoremap <silent> <C-l> :nohlsearch<C-R>=has('diff')?'<Bar>diffupdate':''<CR><CR><C-l>
" }}}

" Appearance {{{
color ron
" }}}

nnoremap <leader>f gqq
vnoremap <leader>f gq
if empty(v:servername) && exists('*remote_startserver')
	call remote_startserver('VIM')
endif
let g:vimtex_format_enabled = 1

set textwidth=80
nnoremap <leader>o mqo<Esc>`q
nnoremap <leader>O mqO<Esc>`q
nnoremap <leader>b :<c-u>ls<cr>:<c-u>b 
nnoremap <leader>sb :<c-u>ls<cr>:<c-u>sb 
nnoremap <leader>vb :<c-u>ls<cr>:<c-u>vert sb 
set splitbelow
set splitright
nnoremap <leader>st /<c-u>TODO<cr>
