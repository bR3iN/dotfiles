[Neovim.links]
nvim = .config/nvim

[Neovim.hooks]
cmd = pip3 install --break-system-packages --user --upgrade neovim-remote
cmd = nvim --headless +q


[Tmux.links]
tmux = .config/tmux


[Zathura.links]
zathura = .config/zathura

[Zathura.hooks]
cmd = xdg-mime default org.pwmt.zathura.desktop application/pdf
cmd = xdg-mime default org.pwmt.zathura.desktop application/epub+zip
cmd = xdg-mime default org.pwmt.zathura.desktop image/vnd.djvu


[Git.links]
gitconfig = .config/git/config


[Kitty.needs]
target = Fonts

[Kitty.links]
kitty = .config/kitty

[Kitty.hooks]
cmd = touch ~/.config/kitty/local.conf


[Redshift.links]
redshift.conf = .config/redshift.conf


[base16-colorizer.links]
base16-colorizer = .config/base16-colorizer

[base16-colorizer.hooks]
run = setup/base16-colorizer.sh
cmd = ~/.config/base16-colorizer/ignore-base16.sh on


[Bat.links]
bat.conf = .config/bat/config


[Fish.links]
fish = .config/fish

[Fish.hooks]
cmd = sudo mkdir -p /root/.config
cmd = sudo cp -r fish /root/.config/


[Bash.links]
bash/bashrc = .bashrc
bash/bash_profile = .bash_profile


[Profile.links]
profile = .profile

[Profile.hooks]
cmd = mkdir -p ~/.profile.d


[Rofi.needs]
target = Fonts

[Rofi.links]
<<<<<<< HEAD
scripts/prompt.sh = .local/libexec/prompt.sh
rofi/askpass_profile.sh = .profile.d/rofi-askpass.sh
=======
rofi = .config/rofi
; rofi/askpass_profile.sh = .profile.d/rofi-askpass.sh
>>>>>>> 015ab9edcc583a51d8d5c520e2d85bd8a28db8cc

[Rofi.installs]
user = scripts/rofi-open
user = scripts/rofi-vpn
user = scripts/rofi-ff
user = scripts/rofi-emoji
user = scripts/rofi-scripts
user = scripts/rofi-inputs
user = scripts/rofi-xrandr
user = scripts/rofi-askpass


[Fonts.hooks]
run = setup/fonts.sh


[Npm.hooks]
cmd = mkdir -p "$HOME/.node_modules"
cmd = npm config set prefix "$HOME/.node_modules"


[Thinkpad.links]
Thinkpad/Xkbmap = .Xkbmap

[Thinkpad.installs]
user = scripts/kbbacklight_toggle
user = scripts/backlight
system = Thinkpad/xorg-conf


[Rust.hooks]
run = setup/rustup.sh


[Greetd.needs]
target = Wallpaper

[Greetd.installs]
system = greetd


[Qutebrowser.links]
qutebrowser/qutebrowser.py = ~/.config/qutebrowser/config.py
qutebrowser/base16.py = ~/.config/qutebrowser/base16.py

[Qutebrowser.hooks]
cmd = xdg-mime default org.qutebrowser.qutebrowser.desktop x-scheme-handler/http{,s}


[Autorandr.links]
autorandr = .config/autorandr


[Cmus.links]
cmus/rc = .config/cmus/rc


[Wallpaper.installs]
user = scripts/wm

[Wallpaper.hooks]
run = setup/wallpaper.sh


[Lightdm.needs]
target = Wallpaper
target = Fonts

[Lightdm.installs]
system = I3/lightdm


[Gradience.hooks]
run = setup/gradience.sh

[Gradience.links]
scripts/propagate-theme.sh = ~/.local/libexec/propagate-theme.sh
gradience/Base16.json = ~/.var/app/com.github.GradienceTeam.Gradience/config/presets/user/Base16.json

[Gradience.hooks]
cmd = flatpak run --command=gradience-cli com.github.GradienceTeam.Gradience apply --gtk both -n Base16


;; Full environments


[Server.needs]
target = Profile
target = Neovim
target = Bash
target = Fish
target = Tmux
target = Bat


[Workstation.needs]
target = Server
target = Fonts
target = Git
target = Kitty
target = Zathura
target = Npm
target = Qutebrowser
target = Wallpaper
target = Rofi
target = Gradience


[Sway.links]
Sway/sway = .config/sway
Sway/waybar = .config/waybar
Sway/swaylock = .config/swaylock
Sway/mako = .config/mako

[Sway.installs]
user = scripts/start-polkit-agent
user = scripts/lock-wrapper
system = Sway/session

[Sway.needs]
; target = Wallpaper
target = Fonts


[I3.needs]
target = Wallpaper
target = Fonts
target = Redshift

[I3.links]
I3/i3 = .config/i3
I3/polybar = .config/polybar
I3/xinitrc = .xinitrc
I3/dunst = .config/dunst


[I3.installs]
user = scripts/start-polkit-agent


;; Full setups; usually an environment from above plus some system setup scripts


[Fedora-I3.hooks]
run = setup/fedora-common.sh
run = setup/fedora-i3.sh

[Fedora-I3.needs]
target = Workstation
target = I3
target = Lightdm
target = Autorandr

[Fedora-I3.hooks]
cmd = sudo systemctl enable --now lightdm


[Ubuntu-Sway.hooks]
run = setup/ubuntu-sway.sh

[Ubuntu-Sway.needs]
target = Workstation
target = Sway


[Fedora-Sway.hooks]
run = setup/fedora-common.sh
run = setup/fedora-sway.sh

[Fedora-Sway.needs]
target = Workstation
target = Sway
; target = Greetd

[Fedora-Sway.hooks]
cmd = sudo systemctl enable --now greetd


[zk-screenshot.installs]
user = scripts/zk-screenshot


[arxiv-calibre.installs]
user = scripts/arxiv-calibre


[Zsh.hooks]
run = setup/zsh.sh

[Zsh.links]
zsh/zshenv = .zshenv
zsh/zshrc = .config/zsh/.zshrc
zsh/zshrc.d = .config/zsh/zshrc.d

[Eww.links]
eww = .config/eww

; vim: nowrap
