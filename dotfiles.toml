[target.zellij]
links = {".config/zellij" = "zellij"}

[target.starship]
links = {".config/starship.toml" = "starship/config.toml", ".config/starship-post.toml" = "starship/config-post.toml"}
cmds = ["cargo install --locked starship"]

[target.helix]
links = {".config/helix" = "helix"}

[target.sway]
install = [
    "bin/start-polkit-agent",
    "bin/lock-wrapper",
    "bin/kbbacklight_toggle",
    "bin/backlight",
    "https://github.com/bR3iN/sway-scratchpad-waybar/releases/download/v0.1.0/sway-scratchpad-waybar-0.1.0-x86_64-linux-gnu",
]

system_install = [
    "Sway/session",
]

cmds = [
    "cp -n ~/.config/sway/config-template ~/.config/sway/config.d/config.local",
    "cp -n ~/.config/kanshi/config-template ~/.config/kanshi/config",
]

links = { ".config/sway" = "Sway/sway", ".config/waybar" = "Sway/waybar", ".config/kanshi" = "Sway/kanshi", ".config/mako" = "Sway/mako" }

[target.tmux.links]
".config/tmux" = "tmux"


[target.nvim]
links = {".config/nvim" = "nvim"}


[target.fonts]
cmds = ["hooks/setup/fonts.sh"]

[target.wallpaper]
cmds = [
    "hooks/setup/wallpaper.sh",
]


[target.kitty]
links = {".config/kitty" = "kitty"}
cmds = ["touch ~/.config/kitty/local.conf"]


[target.wofi]
links = {".config/wofi" = "wofi"}
cmds = ["hooks/setup/wofi-emoji.sh"]

[target.rofi-scripts]
links = {".local/libexec/prompt.sh" = "bin/prompt.sh"}
install = [
    "bin/rofi-open",
    "bin/rofi-vpn",
    "bin/rofi-ff",
    "bin/rofi-scripts",
    "bin/rofi-inputs",
    "bin/rofi-askpass",
    "bin/rofi-bookmarks",
]

[target.bash.links]
".bashrc" = "bash/bashrc"
".bash_profile" = "bash/bash_profile"

[target.zsh]
cmds = ["hooks/setup/zsh.sh"]

links = { ".zshenv" = "zsh/zshenv", ".config/zsh/.zshrc" = "zsh/zshrc", ".config/zsh/zshrc.d" = "zsh/zshrc.d" }

[target.fish]
links = {".config/fish" = "fish"}
cmds = [
    "sudo mkdir -p /root/.config",
    "sudo cp -r fish /root/.config",
]

[target.profile]
links = {".profile" = "profile"}
cmds = ["mkdir -p ~/.profile.d"]

[target.qutebrowser.links]
".config/qutebrowser/config.py" = "qutebrowser/qutebrowser.py"
".config/qutebrowser/base16.py" = "qutebrowser/base16.py"

[target.base16-colorizer]
links = {".config/base16-colorizer" = "base16-colorizer"}
cmds = [
    ["base16-colorizer/ignore-base16.sh", "on"],
    "hooks/setup/base16-colorizer.sh"
]

[target.greetd]
system_install = ["greetd"]

[target.git.links]
".config/git/config" = "gitconfig"

[target.zathura]
links = {".config/zathura" = "zathura"}
cmds = [
    "xdg-mime default org.pwmt.zathura.desktop application/pdf",
    "xdg-mime default org.pwmt.zathura.desktop application/epub+zip",
    "xdg-mime default org.pwmt.zathura.desktop image/vnd.djvu",
]

[target.bat.links]
".config/bat/config" = "bat.conf"

[target.rust]
cmds = ["hooks/setup/rustup.sh"]

[target.zen]
install = ["zen-themes"]

[target.zen-flatpak]
install = ["zen-themes"]
cmds = ["ln -fs ~/.zen ~/.var/app/app.zen_browser.zen/.zen"]

[target.tldr]
links = {".config/tealdeer/config.toml" = "tealdeer.toml"}

[target.npm]
cmds = ["mkdir -p \"$HOME/.node_modules\"", "npm config set prefix \"$HOME/.node_modules\""]

[target.autorandr]
links = {".config/autorandr" = "autorandr"}

[target.cmus]
links = {".config/cmus/rc" = "cmus/rc"}

[target.gradience]
cmds = ["hooks/setup/gradience.sh", "flatpak run --command=gradience-cli com.github.GradienceTeam.Gradience apply --gtk both -n Base16"]
links = {".local/libexec/propagate-theme.sh" = "scripts/propagate-theme.sh", ".var/app/com.github.GradienceTeam.Gradience/config/presets/user/Base16.json" = "gradience/Base16.json"}

[target.i3]
install = ["scripts/start-polkit-agent"]
links = {".config/i3" = "I3/i3", ".config/polybar" = "I3/polybar", ".xinitrc" = "I3/xinitrc", ".config/dunst" = "I3/dunst"}

[target.laptop]
install = ["scripts/kbbacklight_toggle", "scripts/backlight"]

[target.lightdm]
system_install = ["I3/lightdm"]

[target.redshift]
links = {".config/redshift.conf" = "redshift.conf"}

[target.rofi]
links = {".config/rofi" = "rofi"}

[target.zk]
cmds = ["pip install --break-system-packages arxiv"]
install = ["scripts/zk-screenshot", "scripts/arxiv-calibre", "scripts/doi-calibre"]

